{"version":3,"sources":["components/generic/Button/index.js","components/Header/index.js","components/generic/Select/index.js","components/AppController/index.js","components/Backdrop/index.js","components/AppSlideDrawer/index.js","components/SortingVisualizer/Bar/index.js","components/SortingVisualizer/BarChart/index.js","components/SortingVisualizer/VisualizerControllers/index.js","algorithms/helpers/Trace.js","algorithms/BubbleSort.js","algorithms/helpers/helpers.js","algorithms/MergeSort.js","algorithms/QuickSort.js","algorithms/SelectionSort.js","algorithms/InsertionSort.js","components/SortingVisualizer/StateColor/index.js","components/SortingVisualizer/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","className","icon","iconClass","onClick","disabled","children","iconAtrr","classNames","ICON","renderIcon","Header","drawerOpen","toggleDrawer","Close","Hamburger","href","Select","onSelect","options","selectedOption","isOptionsArray","Array","onChange","e","target","value","Object","entries","map","key","finalValue","sortingOptions","BubbleSort","MergeSort","QuickSort","SelectionSort","InsertionSort","arrSizeOptions","Controller","dispatch","sorting","type","arrSize","Backdrop","show","AppSlideDrawer","open","closeDrawer","Bar","val","stateA","stateB","stateC","stateD","sorted","style","BarChart","config","barWidth","arr","length","maxElement","Math","max","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","element","i","barHeight","marginRight","getBarMarginRight","includes","sortedIdx","width","height","VisualizerControllers","disabledControllers","handleControllers","playing","playSpeed","Repeat","repeat","Backward","backward","Pasue","Play","size","play","Forward","forward","Trace","steps","this","originalArr","push","id","j","tmp","getStepsLen","trace","addStep","getlastSortedidx","swap","sequenceGenerator","start","end","from","_","merge","mid","leftChunkLen","rightChunkLen","l","r","splice","setArr","sort","floor","partition","left","right","pivotIndex","pivotValue","partitionIndex","minIndex","len","algoStateColorConfig","name","colorClass","React","memo","algorithm","stateColor","idx","ALGORITHM","visualizerStateInit","playload","sortingElements","currentStep","step","timeoutIds","visualizerReducer","state","action","getStepByIdx","props","useReducer","visualizer","dispatchVisualizer","clearTimeOuts","forEach","timeOutId","clearTimeout","useEffect","totalSteps","isAlgoSelected","disabledControllersHandler","dispatchControllers","stepsLen","timer","forwardOrBackwardStep","unfinishedStepsLen","subType","setTimeout","timeoutId","Number","split","prevProps","nextProps","generateSortingElementArr","min","finMax","finMin","random","generateRandomInt","controllersIntialState","controllersInit","initial","controllersReducer","App","controllers","useState","sideDrawerOpen","setSidedrawerOpen","controllersCom","AppController","Footer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8024cc3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\n\r\nconst renderIcon = (icon, iconClass, iconAtrr) => {\r\n  const ICON = icon;\r\n  return <ICON {...iconAtrr} className={`Button__Icon ${iconClass}`} />;\r\n}\r\n\r\nconst Button = ({\r\n  className,\r\n  icon,\r\n  iconClass,\r\n  onClick,\r\n  disabled,\r\n  children,\r\n  iconAtrr\r\n}) => {\r\n  \r\n  const classNames = `Button ${icon ? 'Button--icon':'' } ${className ? className : ''}`;\r\n\r\n  return (\r\n    <button disabled={disabled} className={classNames}\r\n      onClick={onClick}>\r\n        {icon ? renderIcon(icon, iconClass, iconAtrr) : null}\r\n        {children && <span className=\"Button__Label\">{children}</span>}\r\n      </button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './style.css'\r\nimport Button from '../generic/Button';\r\n\r\nimport { MdMenu as Hamburger, MdClose as Close } from 'react-icons/md';\r\n\r\nconst Header = ({ drawerOpen, toggleDrawer, children }) => (\r\n  <header className=\"App__header\">\r\n    <nav>\r\n      <div className=\"App__header__Menu-icon\">\r\n        <Button icon={drawerOpen ? Close : Hamburger}\r\n          onClick={() => toggleDrawer(!drawerOpen)}\r\n        />\r\n      </div>\r\n      <div className=\"App__header__logo\"> <a href='/'> Sort Visualizer</a></div>\r\n      <div className=\"App__header__spacer\"></div>\r\n      <div className=\"App__header__controller-items\">\r\n        {children}\r\n      </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Select = ({ onSelect, options, selectedOption }) => {\r\n\tconst onChangeHandler = (e) => {\r\n\t\tonSelect(e.target.value);\r\n\t}\r\n\tconst isOptionsArray = options instanceof Array;\r\n\r\n\treturn (\r\n\t\t<select onChange={onChangeHandler} value={selectedOption}>\r\n\t\t\t{\r\n\t\t\t\tObject.entries(options).map(([key, value]) => {\r\n\t\t\t\t\tlet finalValue = isOptionsArray ? value : key;\r\n\t\t\t\t\treturn <option key={key} value={finalValue}>{value}</option>\r\n\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t</select>\r\n\t)\r\n\r\n\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nimport './style.css'\r\nimport Button from '../generic/Button';\r\nimport Select from '../generic/Select';\r\n\r\nconst sortingOptions = {\r\n  '': 'Select Sort',\r\n  BubbleSort: 'Bubble Sort',\r\n  MergeSort: 'Merge Sort',\r\n  QuickSort: 'Quick Sort',\r\n  SelectionSort: 'Selection Sort',\r\n  InsertionSort: 'Insertion Sort'\r\n};\r\n\r\nconst arrSizeOptions = [5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\r\n\r\nconst Controller = ({ value, dispatch }) => {\r\n\r\n  return (\r\n    <ul className='App__controler'>\r\n      <li>\r\n        <Select options={sortingOptions} selectedOption={value.sorting} onSelect={value => dispatch({ type: 'sorting', value: value })} />\r\n      </li>\r\n      <li>\r\n        <Select options={arrSizeOptions} selectedOption={value.arrSize} onSelect={value => dispatch({ type: 'arraySize', value: value })} />\r\n      </li>\r\n      <li>\r\n        <Button className=\"bolder\" onClick={() => dispatch({ type: 'random' })}>Random</Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Backdrop = ({show, className, onClick, children}) => {\r\n\r\n\r\n    return (\r\n        <div className={`Backdrop ${className}`} onClick={onClick}/>\r\n    )\r\n\r\n}\r\n\r\nexport default Backdrop;","import React, { Fragment } from 'react';\r\nimport './style.css';\r\nimport Backdrop from '../Backdrop';\r\n\r\n\r\nconst AppSlideDrawer = ({ open, closeDrawer, children }) => {\r\n\r\n  const className = `AppSlideDrawer ${open ? 'AppSlideDrawer--open' : 'AppSlideDrawer--closed'}`;\r\n\r\n  return (\r\n    <Fragment>\r\n      { open && <Backdrop className=\"Backdrop--dark\" onClick={ () => closeDrawer(!open) } /> }\r\n      <div className={className}>\r\n        \r\n        <div className=\"AppSlideDrawer__controller-items\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default AppSlideDrawer;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Bar = ({\r\n    val,\r\n    stateA,\r\n    stateB,\r\n    stateC,\r\n    stateD,\r\n    sorted,\r\n    style\r\n\r\n}) => {\r\n    //console.log(style);\r\n\r\n    let classNames = 'Bar';\r\n    if (stateA) classNames += ' Bart_stateA'\r\n    if (stateB) classNames += ' Bart_stateB'\r\n    if (stateC) classNames += ' Bart_stateC'\r\n    if (stateD) classNames += ' Bart_stateD'\r\n    if (sorted) classNames += ' Bart_sorted'\r\n\r\n    return (\r\n        <div className={classNames} style={style}>\r\n            <span className=\"Bar__text\">{val}</span>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\nimport './style.css';\r\nimport Bar from '../Bar';\r\n\r\nconst BarChart = ({ config }) => {\r\n\r\n\tconst barWidth = 100 / config.arr.length;\r\n\tconst maxElement = Math.max(...config.arr);\r\n\tconst windowWidth = window.innerWidth\r\n\t\t|| document.documentElement.clientWidth\r\n\t\t|| document.body.clientWidth;\r\n\r\n\tconst getBarMarginRight = (barWidth) => {\r\n\t\t// 0.5 max and 0.125 min\r\n\t\tlet margin = '';\r\n\t\tif (barWidth === 1) margin = 0.125;\r\n\t\telse margin = 0.125 + (0.5 - 0.125) / 20 * barWidth;\r\n\r\n\t\treturn `${margin}rem`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='BarChart'>\r\n\t\t\t{\r\n\t\t\t\tconfig.arr.map((element, i) => {\r\n\r\n\t\t\t\t\tlet barHeight = ((element / maxElement) * 95) + 5;\r\n\t\t\t\t\tlet marginRight = i === config.arr.length - 1 ? '0' : getBarMarginRight(barWidth);\r\n\t\t\t\t\tlet stateA = config.stateA.includes(i);\r\n\t\t\t\t\tlet stateB = config.stateB.includes(i);\r\n\t\t\t\t\tlet stateC = config.stateC.includes(i);\r\n\t\t\t\t\tlet stateD = config.stateD.includes(i);\r\n\t\t\t\t\tlet sorted = config.sortedIdx.includes(i);\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Bar\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tval={windowWidth < 768 && config.arr.length <= 10 ? element : windowWidth >= 768 && config.arr.length <= 20 ? element : null}\r\n\t\t\t\t\t\t\tstateA={stateA}\r\n\t\t\t\t\t\t\tstateB={stateB}\r\n\t\t\t\t\t\t\tstateC={stateC}\r\n\t\t\t\t\t\t\tstateD={stateD}\r\n\t\t\t\t\t\t\tsorted={sorted}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: `${barWidth}%`,\r\n\t\t\t\t\t\t\t\theight: `${barHeight}%`,\r\n\t\t\t\t\t\t\t\tmarginRight: marginRight\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport './style.css';\r\nimport {\r\n    AiOutlinePlayCircle as Play,\r\n    AiOutlinePauseCircle as Pasue,\r\n    AiOutlineFastForward as Forward,\r\n    AiFillFastBackward as Backward,\r\n    AiOutlineSwap as Repeat\r\n} from 'react-icons/ai';\r\nimport Button from '../../generic/Button';\r\nimport Select from '../../generic/Select';\r\n\r\nconst VisualizerControllers = ({ disabledControllers, handleControllers, playing, playSpeed }) => {\r\n\r\n    return (\r\n        <div className=\"VisualizerController\">\r\n            <Button className=\"VisualizerController__Button\" icon={Repeat}\r\n                onClick={() => handleControllers({ type: \"repeat\" })}\r\n                disabled={disabledControllers.repeat}\r\n            />\r\n            <Button className=\"VisualizerController__Button\" icon={Backward}\r\n                onClick={() => handleControllers({ type: \"backward\" })}\r\n                disabled={disabledControllers.backward} />\r\n            <Button className=\"VisualizerController__Button\" icon={playing ? Pasue : Play}\r\n                onClick={() => {\r\n                    let playload = { type: playing ? \"pause\" : \"play\" };\r\n                    handleControllers(playload);\r\n                }}\r\n                iconAtrr={{ size: \"3rem\" }}\r\n                disabled={disabledControllers.play}\r\n            />\r\n            <Button className=\"VisualizerController__Button\" icon={Forward}\r\n                onClick={() => handleControllers({ type: \"forward\" })}\r\n                disabled={disabledControllers.forward}\r\n            />\r\n            <Select selectedOption={`${playSpeed}x`}\r\n                options={['0.25x', '0.5x', '1x', '2x', '4x']}\r\n                onSelect={(value) => handleControllers({ type: \"playSpeed\", value })}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default VisualizerControllers;","class Trace {\r\n  steps = [];\r\n  constructor(arr) {\r\n    this.originalArr = [...arr];\r\n    this.arr = [...arr];\r\n    //initial step\r\n    this.steps.push({\r\n      arr,\r\n      sortedIdx: [],\r\n      stateA: [],\r\n      stateB: [],\r\n      stateC: [],\r\n      stateD: []\r\n    })\r\n  }\r\n\r\n  setArr(arr) {\r\n    this.arr = [...arr];\r\n  }\r\n\r\n  getStepsLen() {\r\n    return this.steps.length;\r\n  }\r\n\r\n  getSteps() {\r\n    return this.steps\r\n  }\r\n\r\n  getStepByIdx(id) {\r\n    return this.steps[id];\r\n  }\r\n\r\n  addStep(sortedIdx = [], stateA = [], stateB = [], stateC = [], stateD = []) {\r\n\r\n\r\n    this.steps.push({\r\n      arr: [...this.arr],\r\n      sortedIdx,\r\n      stateA,\r\n      stateB,\r\n      stateC,\r\n      stateD\r\n    });\r\n\r\n  }\r\n\r\n  swap(i, j) {\r\n    let tmp = this.arr[i];\r\n    this.arr[i] = this.arr[j];\r\n    this.arr[j] = tmp\r\n  }\r\n\r\n  getlastSortedidx() {\r\n    return this.steps[this.getStepsLen() - 1].sortedIdx;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Trace;","const BubbleSort = (trace) => {\r\n\r\n  let i = 0;\r\n  while (i <= trace.arr.length - 1) {\r\n    for (let j = 0; j < trace.arr.length - 1 - i; j++) {\r\n      //Comparing\r\n      trace.addStep(trace.getlastSortedidx(), [j, j + 1]);\r\n      if (trace.arr[j] > trace.arr[j + 1]) {\r\n        trace.swap(j, j + 1);\r\n        //sorted comparing two elements\r\n        trace.addStep(trace.getlastSortedidx(), [], [j, j + 1]);\r\n      }\r\n\r\n    }\r\n    trace.addStep([...trace.getlastSortedidx(), trace.arr.length - 1 - i]);\r\n    i++;\r\n  }\r\n\r\n  return trace;\r\n\r\n}\r\n\r\nexport default BubbleSort;","\r\nexport const sequenceGenerator = (start, end) => {\r\n    return Array.from({ length: end - start }, (_, i) => i + start)\r\n}","import { sequenceGenerator } from './helpers/helpers';\r\n\r\nconst MergeSort = (trace) => {\r\n\r\n\tconst sort = (arr, start, end) => {\r\n\t\tconst length = end - start;\r\n\t\tif (length < 2) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst mid = Math.floor((start + end) / 2);\r\n\t\ttrace.addStep([], [], [], [], sequenceGenerator(start, mid));\r\n\t\tsort(arr, start, mid);\r\n\r\n\t\ttrace.addStep([], [], [], [], sequenceGenerator(mid, end));\r\n\t\tsort(arr, mid, end);\r\n\r\n\t\tmerge(arr, start, mid, end);\r\n\r\n\t}\r\n\r\n\tconst merge = (arr, start, mid, end) => {\r\n\t\tconst leftChunkLen = mid - start;\r\n\t\tconst rightChunkLen = end - mid;\r\n\t\tlet l = 0, r = 0;\r\n\r\n\t\twhile (l < leftChunkLen && r < rightChunkLen) {\r\n\t\t\ttrace.addStep([], [start + r + l, mid + r]);\r\n\t\t\tif (arr[start + l + r] <= arr[mid + r]) {\r\n\t\t\t\tl++;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tarr.splice(start + l + r, 0, arr[mid + r]);\r\n\t\t\t\tarr.splice(mid + r + 1, 1);\r\n\t\t\t\ttrace.setArr(arr);\r\n\t\t\t\ttrace.addStep([], [], [start + r + l, start + r + l + 1]);\r\n\t\t\t\tr++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (l < leftChunkLen) {\r\n\t\t\ttrace.addStep([], [], [], [start + r + l]);\r\n\t\t\tl++;\r\n\t\t}\r\n\r\n\t\twhile (r < rightChunkLen) {\r\n\t\t\ttrace.addStep([], [], [], [mid + r]);\r\n\t\t\tr++;\r\n\t\t}\r\n\t}\r\n\r\n\tsort([...trace.arr], 0, trace.arr.length);\r\n\r\n\ttrace.addStep(sequenceGenerator(0, trace.arr.length));\r\n\r\n\treturn trace;\r\n}\r\n\r\nexport default MergeSort;","const QuickSort = (trace) => {\r\n\r\n\tconst sort = (left, right) => {\r\n\r\n\t\tif (left >= right) {\r\n\t\t\tif (left === right) {\r\n\t\t\t\ttrace.addStep([...trace.getlastSortedidx(), left]);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet partitionIndex = partition(left, right);\r\n\t\ttrace.addStep([...trace.getlastSortedidx(), partitionIndex]);\r\n\t\tsort(left, partitionIndex - 1);\r\n\t\tsort(partitionIndex + 1, right);\r\n\r\n\t}\r\n\r\n\tconst partition = (left, right) => {\r\n\t\tlet pivotIndex = right;\r\n\t\tlet pivotValue = trace.arr[pivotIndex];\r\n\t\tlet partitionIndex = left;\r\n\r\n\t\tfor (let i = left; i < right; i++) {\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [], [partitionIndex], [pivotIndex]);\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [i, pivotIndex], [], [partitionIndex], [pivotIndex]);\r\n\r\n\t\t\tif (trace.arr[i] < pivotValue) {\r\n\r\n\t\t\t\tif (i !== partitionIndex) { // if current comparing index and partition index is same, don't need to swap as because it swaps between itself\r\n\t\t\t\t\ttrace.swap(i, partitionIndex);\r\n\t\t\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [i, partitionIndex]);\r\n\t\t\t\t}\r\n\t\t\t\tpartitionIndex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (pivotIndex !== partitionIndex) { //same case as above\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [], [partitionIndex], [pivotIndex]);\r\n\t\t\ttrace.swap(pivotIndex, partitionIndex);\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [pivotIndex, partitionIndex]);\r\n\t\t}\r\n\r\n\t\treturn partitionIndex;\r\n\r\n\t}\r\n\r\n\tsort(0, trace.arr.length - 1);\r\n\treturn trace;\r\n}\r\n\r\nexport default QuickSort;","const SelectionSort = (trace) => {\r\n\r\n\tlet minIndex, len = trace.arr.length;\r\n\r\n\tfor (let i = 0; i < len; i++) {\r\n\t\tminIndex = i;\r\n\r\n\t\tfor (let j = i + 1; j < len; j++) {\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [], [minIndex], [j]); //show current minimum and current item\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [minIndex, j]); //compare\r\n\r\n\t\t\tif (trace.arr[j] < trace.arr[minIndex]) minIndex = j;\r\n\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [], [minIndex]);\r\n\t\t}\r\n\r\n\t\tif (i !== minIndex) {\r\n\t\t\ttrace.swap(i, minIndex);\r\n\t\t\ttrace.addStep(trace.getlastSortedidx(), [], [i, minIndex]);\r\n\t\t}\r\n\r\n\t\ttrace.addStep([...trace.getlastSortedidx(), i])\r\n\t}\r\n\r\n\treturn trace;\r\n}\r\n\r\nexport default SelectionSort;","import { sequenceGenerator } from './helpers/helpers'\r\nconst InsertionSort = (trace) => {\r\n\tconst len = trace.arr.length;\r\n\r\n\tfor (let i = 1; i < len; i++) {\r\n\t\tlet j = i;\r\n\t\twhile (j > 0 && trace.arr[j - 1] > trace.arr[j]) {\r\n\t\t\ttrace.addStep([], [j, j - 1], [], sequenceGenerator(1, len), sequenceGenerator(0, i));\r\n\t\t\ttrace.swap(j, j - 1);\r\n\t\t\ttrace.addStep([], [], [j, j - 1], sequenceGenerator(1, len), sequenceGenerator(0, i));\r\n\t\t\tj--;\r\n\t\t}\r\n\t}\r\n\t\r\n\ttrace.addStep(sequenceGenerator(0, len));\r\n\treturn trace;\r\n}\r\n\r\nexport default InsertionSort;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst algoStateColorConfig = {\r\n\tMergeSort: [\r\n\t\t{ name: \"Unsorted Group\", colorClass: \"StateColor__item__color--group\" },\r\n\t\t{ name: \"Group Sorted\", colorClass: \"StateColor__item__color--group-sorted\" }\r\n\t],\r\n\tQuickSort: [\r\n\t\t{ name: \"Partiiton Index\", colorClass: \"StateColor__item__color--partition-index\" },\r\n\t\t{ name: \"Pivot\", colorClass: \"StateColor__item__color--pivot\" }\r\n\t],\r\n\tSelectionSort: [\r\n\t\t{ name: \"Current Minimum\", colorClass: \"StateColor__item__color--current-minimum\" },\r\n\t\t{ name: \"Current Item\", colorClass: \"StateColor__item__color--current-item\" }\r\n\t],\r\n\tInsertionSort: [\r\n\t\t{ name: \"Sorted Chunk\", colorClass: \"StateColor__item__color--sorted-chunk\" },\r\n\t\t{ name: \"Unsorted Chunk\", colorClass: \"StateColor__item__color--unsorted-chunk\" }\r\n\t]\r\n}\r\n\r\n\r\nfunction StateColor({ algorithm }) {\r\n\r\n\treturn (\r\n\t\t<div className=\"StateColor\">\r\n\t\t\t<div className=\"StateColor__item\">\r\n\t\t\t\t<span className=\"StateColor__item__color StateColor__item__color--unsorted\"></span>\r\n\t\t\t\t<span className=\"StateColor__item__name\">Unsorted</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"StateColor__item\">\r\n\t\t\t\t<span className=\"StateColor__item__color StateColor__item__color--comparing\"></span>\r\n\t\t\t\t<span className=\"StateColor__item__name\">Comparing</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"StateColor__item\">\r\n\t\t\t\t<span className=\"StateColor__item__color StateColor__item__color--swapping\"></span>\r\n\t\t\t\t<span className=\"StateColor__item__name\">Swapping</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"StateColor__item\">\r\n\t\t\t\t<span className=\"StateColor__item__color StateColor__item__color--sorted\"></span>\r\n\t\t\t\t<span className=\"StateColor__item__name\">Sorted</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t{algoStateColorConfig[algorithm] && algoStateColorConfig[algorithm].map((stateColor, idx) => (\r\n\t\t\t\t<div key={idx} className=\"StateColor__item \">\r\n\t\t\t\t\t<span className={`StateColor__item__color ${stateColor.colorClass}`}></span>\r\n\t\t\t\t\t<span className=\"StateColor__item__name\">{stateColor.name}</span>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default React.memo(StateColor);\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport './style.css';\r\nimport BarChart from './BarChart';\r\nimport VisualizerControllers from './VisualizerControllers';\r\nimport Trace from '../../algorithms/helpers/Trace';\r\nimport BubbleSort from '../../algorithms/BubbleSort';\r\nimport MergeSort from '../../algorithms/MergeSort';\r\nimport QuickSort from '../../algorithms/QuickSort';\r\nimport SelectionSort from '../../algorithms/SelectionSort';\r\nimport InsertionSort from '../../algorithms/InsertionSort';\r\nimport StateColor from './StateColor';\r\n\r\nconst ALGORITHM = {\r\n  'BubbleSort': BubbleSort,\r\n  'MergeSort': MergeSort,\r\n  'QuickSort': QuickSort,\r\n  'SelectionSort': SelectionSort,\r\n  'InsertionSort': InsertionSort\r\n};\r\n\r\nconst visualizerStateInit = (playload) => {\r\n  let trace = new Trace(playload.sortingElements);\r\n  if (playload.algorithm) {\r\n    const sort = ALGORITHM[playload.algorithm];\r\n    if (sort) trace = sort(trace);\r\n  }\r\n\r\n  const visualizerInitState = {\r\n    currentStep: trace.steps[0],\r\n    trace,\r\n    playSpeed: 1,\r\n    algorithm: playload.algorithm,\r\n    step: 0,\r\n    timeoutIds: []\r\n  }\r\n  return visualizerInitState;\r\n}\r\n\r\nconst visualizerReducer = (state, action) => {\r\n\r\n  switch (action.type) {\r\n    case \"play\":\r\n    case \"forward\":\r\n    case \"backward\":\r\n      const step = state.step + action.value;\r\n      return { ...state, step: step, currentStep: state.trace.getStepByIdx(step) }\r\n\r\n    case \"repeat\":\r\n      return { ...state, step: action.value, currentStep: state.trace.getStepByIdx(action.value) }\r\n\r\n    case \"playSpeed\":\r\n      return { ...state, playSpeed: action.value }\r\n\r\n    case \"updateTimeoutIds\":\r\n      return { ...state, timeoutIds: [...action.value] }\r\n\r\n    case \"updateInitState\":\r\n      return visualizerStateInit(action.value);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nconst SortingVisualizer = (props) => {\r\n\r\n  const [visualizer, dispatchVisualizer] = useReducer(visualizerReducer, props, visualizerStateInit);\r\n\r\n  const clearTimeOuts = () => {\r\n    visualizer.timeoutIds.forEach((timeOutId) => clearTimeout(timeOutId));\r\n    dispatchVisualizer({ type: \"updateTimeoutIds\", value: [] });\r\n  }\r\n\r\n  useEffect(() => {\r\n    clearTimeOuts();\r\n    dispatchVisualizer({ type: 'updateInitState', value: props });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props]);\r\n\r\n  const disabledControllersHandler = () => {\r\n\r\n    let totalSteps = visualizer.trace.getStepsLen() - 1;\r\n    let isAlgoSelected = visualizer.algorithm ? true : false;\r\n    const disabledControllers = {};\r\n    disabledControllers.play = !isAlgoSelected || (totalSteps !== 0 && totalSteps === visualizer.step);\r\n    disabledControllers.backward = !isAlgoSelected || visualizer.step === 0;\r\n    disabledControllers.forward = !isAlgoSelected || visualizer.step === totalSteps;\r\n    disabledControllers.repeat = !isAlgoSelected || visualizer.step === 0;\r\n    return disabledControllers;\r\n\r\n  }\r\n\r\n  const dispatchControllers = (action) => {\r\n    let timeoutIds = [];\r\n    const stepsLen = visualizer.trace.getStepsLen() - 1;\r\n    const playing = visualizer.timeoutIds.length > 0;\r\n    let defaultTimer = 250;\r\n    let timer = defaultTimer / visualizer.playSpeed;\r\n\r\n    switch (action.type) {\r\n\r\n      case \"play\":\r\n\r\n        let forwardOrBackwardStep = 0;\r\n        let unfinishedStepsLen = stepsLen - visualizer.step;\r\n\r\n        //Check whether it's call for forward/backward/repeat/playspeed and then play\r\n        if (('subType' in action)) {\r\n\r\n          if (['backwardThenPlay', 'forwardThenPlay'].includes(action.subType)) forwardOrBackwardStep = action.value\r\n\r\n          /*\r\n            If BackwardthenPlay, total processing's steps need to go two step back.\r\n            First step to go back to the previous step and second one to start playing from there.\r\n            So, unfinishedStepsLen have got to increment by 2 \r\n          */\r\n\r\n          if (action.subType === 'backwardThenPlay') unfinishedStepsLen += 2;\r\n\r\n          /*\r\n           If RepeatThenPlay, total processing's steps have got to start from first. \r\n           So, unfinishedStepLen is supposed to be as same as total stepsLen. \r\n          */\r\n          if (action.subType === 'repeatThenPlay') unfinishedStepsLen = stepsLen;\r\n\r\n          /*\r\n            If change playspeed and then play, current timer needs to get update and \r\n            state timer has already been updated before play case gets called by playspeed case\r\n          */\r\n          if (action.subType === 'playSpeedThenPlay') {\r\n            timer = defaultTimer / action.value;\r\n          }\r\n\r\n        }\r\n\r\n        timeoutIds = Array.from({ length: unfinishedStepsLen }, (_, i) => {\r\n\r\n          let playload = { type: action.type, value: 1 };\r\n\r\n          if (i === 0 && forwardOrBackwardStep !== 0)\r\n            playload = { ...action, value: forwardOrBackwardStep };\r\n\r\n          return setTimeout(() => {\r\n            dispatchVisualizer(playload);\r\n          }, i * timer)\r\n\r\n        });\r\n\r\n        let timeOutId = setTimeout(clearTimeOuts, (unfinishedStepsLen - 1) * timer);\r\n        timeoutIds.push(timeOutId);\r\n        dispatchVisualizer({ type: \"updateTimeoutIds\", value: timeoutIds });\r\n        break;\r\n\r\n      case \"pause\":\r\n        clearTimeOuts();\r\n        break;\r\n\r\n      case \"backward\":\r\n        if (visualizer.step > 0) {\r\n          if (playing) {\r\n            clearTimeOuts();\r\n            dispatchControllers({ type: \"play\", subType: \"backwardThenPlay\", value: -1 })\r\n          }\r\n          else dispatchVisualizer({ type: \"backward\", value: -1 });\r\n        }\r\n        break;\r\n\r\n      case \"forward\":\r\n        if (visualizer.step < stepsLen) {\r\n          if (playing) {\r\n            clearTimeOuts();\r\n            dispatchControllers({ type: \"play\", subType: \"forwardThenPlay\", value: 1 });\r\n          }\r\n          else dispatchVisualizer({ type: \"forward\", value: 1 });\r\n        }\r\n        break;\r\n\r\n      case 'repeat':\r\n        if (visualizer.step > 0) {\r\n          clearTimeOuts();\r\n          dispatchVisualizer({ type: \"repeat\", value: 0 });\r\n          let timeoutId = setTimeout(() => {\r\n            dispatchControllers({ type: \"play\", subType: \"repeatThenPlay\", value: 0 });\r\n          }, timer)\r\n          timeoutIds.push(timeoutId);\r\n          dispatchVisualizer({ type: \"updateTimeoutIds\", value: timeoutIds });\r\n        }\r\n        break;\r\n\r\n      case 'playSpeed':\r\n        const playSpeed = Number(action.value.split('x')[0]);\r\n        dispatchVisualizer({ type: \"playSpeed\", value: playSpeed });\r\n\r\n        if (playing) {\r\n          clearTimeOuts();\r\n          let timeoutId = setTimeout(() => {\r\n            dispatchControllers({ type: \"play\", subType: \"playSpeedThenPlay\", value: playSpeed });\r\n          }, 0);\r\n\r\n          timeoutIds.push(timeoutId);\r\n          dispatchVisualizer({ type: \"updateTimeoutIds\", value: timeoutIds });\r\n        }\r\n        break;\r\n\r\n      default:\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"SortingVisualizer\">\r\n      <BarChart config={visualizer.currentStep} />\r\n      <VisualizerControllers\r\n        disabledControllers={disabledControllersHandler()}\r\n        handleControllers={dispatchControllers}\r\n        playing={visualizer.timeoutIds.length > 0}\r\n        playSpeed={visualizer.playSpeed}\r\n      />\r\n      <StateColor algorithm={props.algorithm} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default React.memo(SortingVisualizer, (prevProps, nextProps) => prevProps.sortingElements === nextProps.sortingElements && prevProps.algorithm === nextProps.algorithm);","import React from \"react\";\r\n\r\nimport './style.css';\r\n\r\nexport default props => {\r\n  return (\r\n    <footer>\r\n      <span>Developed By <a target=\"_blank\" className=\"footer__link\" href=\"https://www.linkedin.com/in/mithucn/\"><b>Mithu CN</b></a></span>\r\n    </footer>\r\n  );\r\n};\r\n","import React, { useReducer, useState } from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './components/Header/';\r\nimport AppController from './components/AppController';\r\nimport AppSlideDrawer from './components/AppSlideDrawer';\r\nimport SortingVisualizer from './components/SortingVisualizer';\r\nimport Footer from './components/Footer/';\r\n\r\n\r\nconst generateRandomInt = (min, max) => {\r\n  let finMax = max || 500,\r\n    finMin = min || 1;\r\n  return Math.floor(Math.random() * (finMax - finMin + 1) + finMin);\r\n};\r\n\r\nconst generateSortingElementArr = arrSize => {\r\n  return Array.from({ length: arrSize }, () => generateRandomInt(1, arrSize * 5));\r\n};\r\n\r\nconst controllersIntialState = {\r\n  sorting: '',\r\n  arrSize: 5,\r\n  arr: []\r\n};\r\n\r\nconst controllersInit = (initial) => {\r\n\r\n  return {\r\n    sorting: initial.sorting,\r\n    arrSize: initial.arrSize,\r\n    arr: generateSortingElementArr(initial.arrSize)\r\n  }\r\n\r\n}\r\n\r\nconst controllersReducer = (state, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'sorting':\r\n      return controllersInit({ sorting: action.value, arrSize: state.arrSize });\r\n    case 'arraySize':\r\n      return controllersInit({ sorting: state.sorting, arrSize: action.value });\r\n    case 'random':\r\n      return controllersInit({ sorting: state.sorting, arrSize: state.arrSize });\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction App() {\r\n  const [controllers, dispatchControllers] = useReducer(controllersReducer, controllersIntialState, controllersInit);\r\n  const [sideDrawerOpen, setSidedrawerOpen] = useState(false);\r\n  const controllersCom = <AppController value={controllers} dispatch={dispatchControllers} />;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        drawerOpen={sideDrawerOpen}\r\n        toggleDrawer={setSidedrawerOpen}\r\n      >\r\n        {controllersCom}\r\n      </Header>\r\n\r\n      <AppSlideDrawer\r\n        open={sideDrawerOpen}\r\n        closeDrawer={setSidedrawerOpen}\r\n      >\r\n        {controllersCom}\r\n      </AppSlideDrawer>\r\n\r\n      <main className='App__body'>\r\n        <SortingVisualizer sortingElements={controllers.arr} algorithm={controllers.sorting} />\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}